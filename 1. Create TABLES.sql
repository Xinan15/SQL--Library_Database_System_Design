--Basic infomation about Members and Items

CREATE TABLE MEMBER(
    MEMBER_ID NUMBER(10) CONSTRAINT PK_MEMBER PRIMARY KEY,
    MEMBER_NAME VARCHAR2(50) NOT NULL,
    EMAIL_ADD VARCHAR2(50),
    IDENTITY VARCHAR(10) NOT NULL,
    LOAN_CREDIT NUMBER(2) NOT NULL,
    BORROWING NUMBER(2) NOT NULL,
    CONSTRAINT VALID_IDENTITY
    CHECK (IDENTITY IN('Student','Staff')),
    CONSTRAINT VALID_CREDIT
    CHECK (LOAN_CREDIT IN(5,10))
);


CREATE TABLE ITEM_INFO(
    ITEM_ID NUMBER(10) CONSTRAINT PK_ITEM PRIMARY KEY,
    ITEM_NAME VARCHAR2(50) NOT NULL,
    ITEM_STATE VARCHAR2(20) NOT NULL,
    CONSTRAINT VALID_ITEM_STATE
    CHECK(ITEM_STATE IN('In stock','Out on loan'))
);


--Inventory list of Items
--The Loan_Period is mesured in days. '0' means it can only be used within the library.

CREATE TABLE ITEM_INV(
    ITEM_NAME VARCHAR2(50) CONSTRAINT PK_INV PRIMARY KEY,
    ITEM_TYPE VARCHAR2(10) NOT NULL,
    LOAN_PERIOD NUMBER(3) NOT NULL,
    TOTAL_STOCK NUMBER(3) NOT NULL,
    CONSTRAINT VALID_ITEM_TYPE
    CHECK(ITEM_TYPE IN('Books','Videos','DVDs','CDs'))
);

--Locate the item by its name

CREATE TABLE ITEM_LOC(
     ITEM_NAME VARCHAR2(50) CONSTRAINT PK_LOC PRIMARY KEY,
     FLOOR_NUM NUMBER(1) NOT NULL,
     SHELF_NUM NUMBER(3) NOT NULL,
     CLASS_NUM VARCHAR2(3) NOT NULL
);

ALTER TABLE ITEM_LOC ADD CONSTRAINT LIBRARY_FLOOR CHECK(FLOOR_NUM < 4);

--Loan record

CREATE TABLE LOAN_INFO(
    LOAN_REC_NUM NUMBER(10) CONSTRAINT PK_LOAN PRIMARY KEY,
    MEMBER_ID  NUMBER(10) NOT NULL,
    ITEM_ID NUMBER(10) NOT NULL,
    ITEM_NAME VARCHAR2(50) NOT NULL,
    LENDING_DATE DATE NOT NULL,
    DUE_DATE DATE NOT NULL,
    RETURN_DATE DATE,
    CONSTRAINT FK_LOAN_MEMID FOREIGN KEY(MEMBER_ID) REFERENCES MEMBER,
    CONSTRAINT FK_LOAN_ITEMID FOREIGN KEY(ITEM_ID)  REFERENCES ITEM_INFO
);

--Expire information

CREATE TABLE EXP_INFO(
    LOAN_REC_NUM NUMBER(10) CONSTRAINT PK_EXP PRIMARY KEY,
    MEMBER_ID  NUMBER(10) NOT NULL,
    EXPIRED_DAYS NUMBER(2) NOT NULL,
    FINE NUMBER(6) NOT NULL,
    CONSTRAINT FK_EXP_REC_NUM FOREIGN KEY(LOAN_REC_NUM)
            REFERENCES LOAN_INFO
);

--Reservation Information

CREATE TABLE RESERV_INFO(
    RESERVATION_RECORD_NUM NUMBER(10) CONSTRAINT PK_RES PRIMARY KEY,
    MEMBER_ID NUMBER(10) NOT NULL,
    ITEM_NAME VARCHAR2(50) NOT NULL,
    RESERVATION_DATE Date,
    NUM_OF_REFUSALS NUMBER(1),
    CONSTRAINT FK_RES_MEMID FOREIGN KEY(MEMBER_ID)
        REFERENCES MEMBER,
    CONSTRAINT FK_RES_ITEMNAME FOREIGN KEY(ITEM_NAME)
        REFERENCES ITEM_INV
);

ALTER TABLE RESERV_INFO ADD CONSTRAINT REFUSAL_LIMIT CHECK(NUM_OF_REFUSALS < 3);

--Member's act to the notification of picking up their reservation.
--Act_Date means the time when member response to the library. If the Act_Date exceeds the response time limit, it means Refuse.

CREATE TABLE RESERV_ACT(
   RESERVATION_RECORD_NUM NUMBER(10) NOT NULL,
   ACT_DATE DATE NOT NULL,
   ACCEPT_OR_REFUSE VARCHAR2(10) NOT NULL,
   CONSTRAINT PK_ACT PRIMARY KEY(RESERVATION_RECORD_NUM,ACT_DATE),
   CONSTRAINT VALID_ACT_STATE
   CHECK(ACCEPT_OR_REFUSE IN('Accept','Refuse'))
);

CREATE TABLE ACCOUNT(
    MEMBER_ID NUMBER(10) CONSTRAINT PK_ACC PRIMARY KEY,
    TOTAL_FINE NUMBER(6) NOT NULL,
    STATE VARCHAR(10) NOT NULL,
    CONSTRAINT FK_ACC_MEMID FOREIGN KEY(MEMBER_ID)
        REFERENCES MEMBER,
    CONSTRAINT VALID_ACC_STATE 
    CHECK (STATE IN('Active','Suspended'))
);


